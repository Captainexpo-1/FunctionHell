var fn foo = fn <> {
    var int a = int <> {
        ret 3
    }
    var int b = int <> {
        ret 2
    }
    ret int <int c, int d> {
        ret a * (c + d) / b
    }
}

// calling this function treats the a and b as their values in it's previous scope

var fn x = foo with ()
x with (1, 2) == 2